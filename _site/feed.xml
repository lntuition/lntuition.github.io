<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>C로 시를 쓰는 바보 개발자</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 29 Aug 2019 19:23:02 +0900</pubDate>
    <lastBuildDate>Thu, 29 Aug 2019 19:23:02 +0900</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>간단한 Debian-Package 제작해보기</title>
        <description>&lt;p&gt;간단한 Debian-Package 제작해보기&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;시작하면서&quot;&gt;시작하면서&lt;/h2&gt;
&lt;p&gt;업무를 하면서 Ubuntu 환경에서 돌아가는 Package를 만들어야 할 일이 생겼습니다.
습관적으로 Apt-get 을 사용해서 패키지를 당겨오고 설치만 해봤지 만들어 본적은 한번도 없었습니다.
여러 우여곡절들이 있었지만 꽤나 재미있고 신선했던 일이라서 포스팅으로 남겨볼까합니다.&lt;/p&gt;

&lt;h2 id=&quot;control&quot;&gt;Control&lt;/h2&gt;
&lt;p&gt;Control 파일은 데비안 형식의 패키지의 모든 정보를 담고 있는 파일입니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Package: Sample Debian Package
Version: 0.0.1
Section: devel
Priority: optional
Architecture: all
Depends: python3
Maintainer : lntuition
Description : Sample debian packaging example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Package (필수): 데비안 패키지 이름입니다.&lt;/li&gt;
  &lt;li&gt;Version (필수): 버전명입니다.&lt;/li&gt;
  &lt;li&gt;Section : 데비안 패키지에서는 섹션별로 control record(?)를 다르게 저장한다고 하네요. 사용할 수 있는 &lt;a href=&quot;https://packages.debian.org/unstable/&quot;&gt;리스트 옵션&lt;/a&gt;은 다음과 같고, 여기서는 개발(devel) 옵션을 사용하겠습니다.&lt;/li&gt;
  &lt;li&gt;Priority : 패키지의 우선순의를 의미합니다. required → important → standard → optional → extra 순으로 정의되어있습니다.&lt;/li&gt;
  &lt;li&gt;Architecture (필수): 패키지가 Architecture을 의미합니다. 가장 크게 주로 쓰이는 옵션은 all과 any가 있습니다. all의 경우는 아키텍쳐와 상관없이 사용할 수 있는 패키지만 빌드하는 옵션이고, any의 경우에는 빌드 패키지와 무관하게 모든 아키텍쳐에서 잘 컴파일 되어야함을 의미합니다.&lt;/li&gt;
  &lt;li&gt;Depends : 의존성이 있는 패키지를 나타냅니다.&lt;/li&gt;
  &lt;li&gt;Maintainer (필수) : maintainer 이름입니다.&lt;/li&gt;
  &lt;li&gt;Description (필수) : 패키지 설명입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;구조&quot;&gt;구조&lt;/h2&gt;
&lt;p&gt;데비안 패키지 폴더의 구조는 Root와 대응됩니다. 
즉 내가 /usr/local/lib에 설치하고 싶다면 폴더의 구조를 같게 해주면 되는것이죠.
즉 Debian Package의 구조는 보통 아래처럼 구성됩니다.&lt;/p&gt;
&lt;center&gt;
    &lt;img src=&quot;/images/Make-debian-package-tree.png&quot; /&gt;
&lt;/center&gt;

&lt;h2 id=&quot;postinst--postrm&quot;&gt;postinst / postrm&lt;/h2&gt;
&lt;p&gt;usr/local/lib에 설치되어 있는 라이브러리를 활성하기 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo ldconfig /usr/local/lib&lt;/code&gt; 명령어를 실행시켜 주어야 합니다.
하지만 저희가 매번 apt 등을 이용하여 설치시에 이 명령어를 실행하는 것은 아니죠.
우리는 이것을 postinst 파일에 기록함으로서 자동 실행하게 만들 수 있습니다.
파일명에서 볼 수 있듯이 postinst은 설치가 끝 난 후에 자동으로 실행되는 스크립트 임을 알 수 있죠.
유사하게 패키지가 삭제된 후에 어떤 파일을 삭제 하고 싶다거나 라는 일이 있으면 같은 방식으로 스크립트를 postrm에 기술해 주면됩니다.
이때 두 스크립트를 실행하기 위해서 chmod 를 통해 권한(755)를 부여해 주어야합니다.&lt;/p&gt;

&lt;h2 id=&quot;빌드설치&quot;&gt;빌드/설치&lt;/h2&gt;
&lt;p&gt;빌드의 경우에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;dpkg -b &amp;lt;Directory&amp;gt;&lt;/code&gt; 옵션으로 데비안 패키지를 만들 수 있습니다.
다만 설치의 경우에 &lt;code class=&quot;highlighter-rouge&quot;&gt;dpkg -i &amp;lt;Package&amp;gt;&lt;/code&gt; 를 이용하면 package에 걸려 있는 dependency를 check만 할 뿐 설치해 주지는 않죠
이를 해결하기 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;apt -i &amp;lt;Package&amp;gt;&lt;/code&gt; 를 이용하여 설치해 주면 해결이 됩니다.
apt는 dpkg 보다 높은 level의 tool 이므로 자동으로 dependency를 찾아주고 설치까지 해줍니다.&lt;/p&gt;

&lt;h2 id=&quot;끝내면서&quot;&gt;끝내면서&lt;/h2&gt;
&lt;p&gt;패키징을 처음 해보면서 드는 생각은 ‘생각보다는 할만하네?’ 였습니다.
새로운 것을 알아가는 과정은 언제나 즐겁네요.&lt;/p&gt;
&lt;center&gt; &lt;b&gt; &quot;앞으로도 지나가는 모든일에 재미를 붙일 수 있도록 해봐야겠습니다.&quot; &lt;/b&gt; &lt;/center&gt;

&lt;hr /&gt;
&lt;p&gt;참고 : &lt;a href=&quot;https://www.debian.org/doc/debian-policy/ch-controlfields.html&quot;&gt;https://www.debian.org/doc/debian-policy/ch-controlfields.html&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 09 Aug 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/Make-debian-package/</link>
        <guid isPermaLink="true">http://localhost:4000/Make-debian-package/</guid>
        
        <category>Debian</category>
        
        <category>Linux</category>
        
        
      </item>
    
      <item>
        <title>간단한 Chrome-extension 제작해보기</title>
        <description>&lt;p&gt;간단한 Chrome-extension 제작해보기&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;시작하면서&quot;&gt;시작하면서&lt;/h2&gt;
&lt;p&gt;회사에 입사하고 나서 한동안은 집-회사만을 반복하는 평일이 지나가더군요. 
덕분에(?) 학생때는 그다지 주기적인 삶을 살지 않았기때문에 챙겨보지 못했던 야구경기를 챙겨볼 수 있게되었습니다.
저는 주로 야구를 네이버 스포츠에 가서 보는데 TV 중계를 틀때마다 항상 광고가 나오곤 합니다. 
그럼 매번 Skip 버튼을 눌러줘야하죠. 
그리고 명색은 개발자인 저는 이런 생각을 합니다.&lt;/p&gt;
&lt;center&gt; &lt;b&gt; &quot;이거 자동으로 Skip 해주는 소스를 짤 수 있지 않을까?&quot; &lt;/b&gt; &lt;/center&gt;

&lt;h2 id=&quot;manifest&quot;&gt;Manifest&lt;/h2&gt;
&lt;p&gt;크롬 익스텐션에서 일종의 config 역할을 하는것이 바로 manifest.json 파일입니다. 
Text editor를 이용하여 manifest.json 파일을 만든 후 다음과 같이 아래에 입력해 보죠.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;name&quot;: &quot;Chrome-extension practice&quot;,
    &quot;version&quot;: &quot;1.0&quot;,
    &quot;description&quot;: &quot;Chrome-extension practice&quot;,
    &quot;manifest_version&quot;: 2,
    &quot;content_scripts&quot;: [
        {
            &quot;js&quot;: [&quot;main.js&quot;],
            &quot;matches&quot;: [&quot;https://sports.naver.com/*&quot;],
            &quot;run_at&quot;: &quot;document_end&quot;
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;감이 좋으신 분들은 바로 아시겠지만, 위 Manifest를 통해서 우리가 만들어볼 크롬 익스텐션은 네이버 스포츠에 들어갔을때 document의 로딩이 끝난 후(DOM이 완료된 직후)에 main.js를 실행할 것입니다.
일단은 간단하게 main.js에 &lt;code class=&quot;highlighter-rouge&quot;&gt;console.log(&quot;Hello World&quot;);&lt;/code&gt; 를 입력한 후 위에서 만든 manifest와 같이 폴더에 넣어서 저장해 둡시다.&lt;/p&gt;

&lt;h2 id=&quot;개발자-모드로-시작하기&quot;&gt;개발자 모드로 시작하기&lt;/h2&gt;
&lt;p&gt;그럼 이제 만들어진 크롬 익스텐션을 크롬에 넣어봅시다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;먼저 &lt;a href=&quot;chrome://extensions/&quot;&gt;chrome://extensions/&lt;/a&gt; 에 들어가서 우측 상단에 있는 개발자 모드를 On 으로 바꿉시다.&lt;/li&gt;
  &lt;li&gt;좌측 상단의 &lt;strong&gt;압축해제된 확정 프로그램을 로드합니다&lt;/strong&gt; 를 클릭한 후 manifest가 들어있는 폴더를 선택합니다.&lt;/li&gt;
  &lt;li&gt;아래에 manifest의 title이 적혀있는 탭의 새로고침 버튼을 통해 변경사항을 저장할 수 있습니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;테스트하기&quot;&gt;테스트하기&lt;/h2&gt;
&lt;p&gt;이제 우측 상단에 크롬 익스텐션이 추가 됨을 확인하였습니다.
이제 네이버 스포츠를 접속한 후에 F12를 눌러 개발자 도구를 확인해보면 콘솔창에 Hello World가 찍혀 있는 것을 확인해 볼 수 있습니다.
manifest 에서 우리가 네이버 스포츠에 접근했을 시에만 main.js를 수행하도록 정의해 놓았으므로 다른 사이트에 들어갈 경우에는 콘솔창에 아무것도 뜨지 않습니다.&lt;/p&gt;

&lt;center&gt;
    &lt;img src=&quot;/images/Chrome-extension-1-console.png&quot; /&gt;
    &lt;b&gt; &quot;이제 크롬 익스텐션을 만들 준비가 완료되었습니다&quot; &lt;/b&gt;
&lt;/center&gt;

&lt;h2 id=&quot;mainjs&quot;&gt;Main.js&lt;/h2&gt;
&lt;p&gt;이제 우리는 광고를 스킵하는 코드를 작성하기만 하면됩니다.
제가 생각했을때의 가장 좋은 방법은 &lt;strong&gt;광고 스킵버튼이 등장했을 때 자동으로 광고 버튼을 클릭한다&lt;/strong&gt; 였습니다.&lt;/p&gt;

&lt;p&gt;하지만 정확히 광고 스킵버튼이 등장했을 때를 캐치하는건 Client 사이드에서는 쉽지 않았습니다.
그래서 방향을 조금 바꾸어서 &lt;strong&gt;광고 스킵버튼이 나타날때 까지 광고 버튼을 클릭&lt;/strong&gt; 하는 코드를 작성해 보았습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;autoClickFunc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByClassName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;skipBtn&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Button clicked successfully !&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;clearInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;autoClickFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;TypeError&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;autoClearFunc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clearInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;autoClickFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;0.3s 마다 Skip 버튼을 눌러보는 간단한 코드를 작성하게 되었습니다.
멍청한 코드지만 정상적으로 작동해서 Skip 버튼을 누르는 대신 콘솔창에 Button clicked successfully 를 띄워줍니다.
그런데 뭔가 아쉽네요…&lt;/p&gt;

&lt;h2 id=&quot;확장하기&quot;&gt;확장하기&lt;/h2&gt;
&lt;p&gt;지금 여기서 더 해볼 수 있는게 무엇일까 생각했을 때 가장 먼저 생각난 기능은 &lt;strong&gt;On/Off 기능&lt;/strong&gt; 이였습니다.
해당 기능을 구현하고 조작할 수 있는 인터페이스에 대한 시나리오를 먼저 간단하게 아래와 같이 그려봤습니다.&lt;/p&gt;

&lt;center&gt; &lt;img src=&quot;/images/Chrome-extension-2-scenario.png&quot; /&gt; &lt;/center&gt;

&lt;h2 id=&quot;manifest-1&quot;&gt;Manifest&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;name&quot;: &quot;Chrome-Auto-scriptor&quot;,
    &quot;version&quot;: &quot;1.0&quot;,
    &quot;manifest_version&quot;: 2,
    &quot;content_scripts&quot;: [
        {
            &quot;js&quot;: [&quot;js/main.js&quot;],
            &quot;matches&quot;: [&quot;https://sports.naver.com/*&quot;],
            &quot;run_at&quot;: &quot;document_end&quot;
        }
    ],

    &quot;background&quot;: {
        &quot;scripts&quot;: [
            &quot;js/init.js&quot;
        ],
        &quot;persistent&quot;: true
    },
    &quot;browser_action&quot;: {},
    &quot;options_ui&quot;: {
        &quot;page&quot;: &quot;html/option.html&quot;,
        &quot;open_in_tab&quot;: true
    },
    &quot;permissions&quot;: [
        &quot;storage&quot;
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;처음에 작성하였던 Manifest를 위의 시나리오를 구현할 수 있도록 위와 같이 수정하였습니다. 
Option.html 을 통해 사용자 인터페이스를 구현하고 Chrome storage 를 사용하여 현재 Status를 저장할 수 있도록 하였습니다.&lt;/p&gt;

&lt;h2 id=&quot;인터페이스&quot;&gt;인터페이스&lt;/h2&gt;
&lt;center&gt;
    &lt;img src=&quot;/images/Chrome-extension-2-interface.png&quot; /&gt;
    &lt;b&gt; &quot;On 상태를 버튼이 눌린 상태로 표현하여 직관적인 인터페이스를 지향했습니다&quot;&lt;/b&gt;
&lt;/center&gt;

&lt;h2 id=&quot;chrome-storage&quot;&gt;Chrome Storage&lt;/h2&gt;
&lt;p&gt;기능이 On/Off 되어있는지에 대한 상태값을 저장하기 위해서 &lt;a href=&quot;https://developers.chrome.com/extensions/storage&quot;&gt;Chrome Storage API&lt;/a&gt;를 사용하였습니다.
인터페이스가 켜질때 Chrome storage 에서 값을 가져와서 버튼의 상태를 표시하고 버튼을 클릭할 때 Chrome storage의 값을 수정하였습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Set page with option value&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;isNaverSportsAutoSkip&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;is-info&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Set onclick event&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toggle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;is-info&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;is-info&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;또한 Background 에서 호출하는 스크립트에는 Chrome storage 에 해당 key 값의 value가 없을 경우(ex : 익스텐션을 처음 설치하였을 경우)를 대비하여 Default 값을 Set 하는 코드를 작성하였습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Add Option.html open event&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browserAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onClicked&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tabs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;openOptionsPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Set default option value&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;isNaverSportsAutoSkip&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 코드들에 대해서 길게 설명을 하지 않는 이유는 제가 만들어논 시나리오를 해결하기 위해 구현한 스크립트기 때문입니다.
혹시나 위에 링크해 놓은 크롬 공식 개발 문서를 보고도 위의 소스가 잘 이해가 가지 않는다면 댓글에 이해가 가지 않는 점을 적어주시면 좀 더 자세히 설명 드리겠습니다 :)&lt;/p&gt;

&lt;h2 id=&quot;끝내면서&quot;&gt;끝내면서&lt;/h2&gt;
&lt;p&gt;사실 글 쓰면서 느끼는건데 그렇게 어려운 점은 많지 않음에도 불구하고 적지 않는 시간이 걸린것 같네요.
말만 번지르르한 &lt;strong&gt;개발자&lt;/strong&gt;에서 벗어나기 위해 부단히 노력해야겠습니다.
전체 소스가 들어있는 &lt;a href=&quot;https://github.com/lntuition/Toy-Project/tree/master/Chrome-Auto-Scriptor/&quot;&gt;Github&lt;/a&gt;는 여기로 들어가실수 있구요, 
Publish된 &lt;a href=&quot;https://chrome.google.com/webstore/detail/chrome-auto-scriptor/ajemfnoiodjboeloinfigmooikjbcccm&quot;&gt;Extension&lt;/a&gt;은 여기서 확인할 수 있습니다.&lt;/p&gt;

&lt;center&gt; &lt;b&gt; &quot;사소한 것에서 또 다른 재미있는 Toy Project를 찾아서 오겠습니다&quot; &lt;/b&gt; &lt;/center&gt;

&lt;hr /&gt;
&lt;p&gt;참고 : &lt;a href=&quot;https://developer.chrome.com/extensions/getstarted&quot;&gt;https://developer.chrome.com/extensions/getstarted&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 31 Jul 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/Chrome-extension/</link>
        <guid isPermaLink="true">http://localhost:4000/Chrome-extension/</guid>
        
        <category>Chrome-extension</category>
        
        <category>Javascript</category>
        
        <category>네이버 스포츠</category>
        
        
      </item>
    
      <item>
        <title>Github 블로그를 시작하였습니다.</title>
        <description>&lt;p&gt;Github 블로그를 시작하면서 드는 생각들&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;github-블로그를-시작하면서&quot;&gt;Github 블로그를 시작하면서&lt;/h2&gt;
&lt;p&gt;2019년이 반이나 벌써 지나버린 지금에서야 Github 블로그를 시작하네요. 
실제로 jekyll을 이전에 흘깃 보고 “언젠가는 해야겠지..” 라며 만들어놓은 repo가 저에게 버려진채로 방치되어있었죠. 
새로운 마음으로 새로운 repo와 함께 Github 블로그를 시작하려 합니다 :)&lt;/p&gt;

&lt;h2 id=&quot;근황&quot;&gt;근황&lt;/h2&gt;
&lt;p&gt;학생신분을 졸업하고 어떻게 그럭저럭 괜찮은 회사에 입사했습니다.
회사이야기에 대해서는 좀더 insight가 생기고 기회가 된다면 할 수 있는 날이 오면 좋겠네요.
아무튼 이제 주니어 개발자로서의 길을 조금씩이나마 걸어보려 합니다.&lt;/p&gt;

&lt;h2 id=&quot;앞으로의-계획&quot;&gt;앞으로의 계획&lt;/h2&gt;
&lt;p&gt;올해는 부족한 실력을 깨우치는 해가 될것같습니다. 
좋은 프로젝트를 만들 만한 아이디어도 실력도 지금의 제게는 좀 많이 부족한것 같더라고요.
그래서 올해를 “TOY PROJECT”의 해로 만들고자 합니다.
이것저것 가리지 않고 잡식성(?)스럽게 뭔가를 해보는 것도 좋을거 같더라구요.
일단은 최근 간단하게 만들어보았던 Chrome-extension에 대한 이야기를 시작으로 공부하는 또는 공부하려는 내용들을 많이 적어보려고 합니다.&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Jul 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/Github-blog-start/</link>
        <guid isPermaLink="true">http://localhost:4000/Github-blog-start/</guid>
        
        <category>이야기</category>
        
        
      </item>
    
  </channel>
</rss>

